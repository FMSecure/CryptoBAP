if ¬(Bitwise_And((7)(sy_SP_EL0))=0) then
event bad xor 
else
if ¬(((sy_SP_EL0-48)<=18446744073709551599)∧(((0<(sy_SP_EL0-48))∨((16+(sy_SP_EL0-48))<=0))∧(((sy_SP_EL0-48)<0)∨(4294967295<=(sy_SP_EL0-48))))) then
event bad xor 
else
if ¬(Bitwise_And((3)(5_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((5_tmp_SP_EL0+28)<=18446744073709551611)∧(((0<(5_tmp_SP_EL0+28))∨((4+(5_tmp_SP_EL0+28))<=0))∧(((5_tmp_SP_EL0+28)<0)∨(4294967295<=(5_tmp_SP_EL0+28))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(5_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((5_tmp_SP_EL0+16)<=18446744073709551607)∧(((0<(5_tmp_SP_EL0+16))∨((8+(5_tmp_SP_EL0+16))<=0))∧(((5_tmp_SP_EL0+16)<0)∨(4294967295<=(5_tmp_SP_EL0+16))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(5_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((5_tmp_SP_EL0+40)<=18446744073709551607)∧(((0<(5_tmp_SP_EL0+40))∨((8+(5_tmp_SP_EL0+40))<=0))∧(((5_tmp_SP_EL0+40)<0)∨(4294967295<=(5_tmp_SP_EL0+40))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(5_tmp_SP_EL0))=0) then
event bad xor 
else
new RAND_NUM_29 fixed_64 
if ¬(Bitwise_And((7)(5_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(5_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((5_tmp_SP_EL0-64)<=18446744073709551599)∧(((0<(5_tmp_SP_EL0-64))∨((16+(5_tmp_SP_EL0-64))<=0))∧(((5_tmp_SP_EL0-64)<0)∨(4294967295<=(5_tmp_SP_EL0-64))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((40_tmp_SP_EL0+24)<=18446744073709551607)∧(((0<(40_tmp_SP_EL0+24))∨((8+(40_tmp_SP_EL0+24))<=0))∧(((40_tmp_SP_EL0+24)<0)∨(4294967295<=(40_tmp_SP_EL0+24))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((40_tmp_SP_EL0+32)<=18446744073709551607)∧(((0<(40_tmp_SP_EL0+32))∨((8+(40_tmp_SP_EL0+32))<=0))∧(((40_tmp_SP_EL0+32)<0)∨(4294967295<=(40_tmp_SP_EL0+32))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((40_tmp_SP_EL0+40)<=18446744073709551607)∧(((0<(40_tmp_SP_EL0+40))∨((8+(40_tmp_SP_EL0+40))<=0))∧(((40_tmp_SP_EL0+40)<0)∨(4294967295<=(40_tmp_SP_EL0+40))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬((64_R0<=18446744073709551614)∧(((0<64_R0)∨((1+64_R0)<=0))∧((64_R0<0)∨(4294967295<=64_R0)))) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
new OTP_83 fixed_64 
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((40_tmp_SP_EL0+48)<=18446744073709551607)∧(((0<(40_tmp_SP_EL0+48))∨((8+(40_tmp_SP_EL0+48))<=0))∧(((40_tmp_SP_EL0+48)<0)∨(4294967295<=(40_tmp_SP_EL0+48))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
out c, exclusive_or(inputs) 
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(((40_tmp_SP_EL0+56)<=18446744073709551607)∧(((0<(40_tmp_SP_EL0+56))∨((8+(40_tmp_SP_EL0+56))<=0))∧(((40_tmp_SP_EL0+56)<0)∨(4294967295<=(40_tmp_SP_EL0+56))))) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(40_tmp_SP_EL0))=0) then
event bad xor 
else
if ¬(Bitwise_And((7)(124_SP_EL0))=0) then
event bad xor 
else
