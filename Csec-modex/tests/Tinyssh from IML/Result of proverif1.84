
Linear part:
kgen(kgen(g(),a_8),b_9) = kgen(kgen(g(),b_9),a_8)
Completing equations...
Completed equations:
kgen(kgen(g(),a_8),b_9) = kgen(kgen(g(),b_9),a_8)
Convergent part:
Completing equations...
Completed equations:
Completed destructors:
verify(sign(x_59,y_60),pk(y_60)) => true()
pars1(conc(arg0_61,arg1_62)) => arg0_61
dec(enc(m_63,i_64),i_64) => m_63
pars2(conc(arg0_66,arg1_65)) => arg1_65
Process:
{1}!
new skS_14;
{2}let pkS_15 = pk(skS_14) in
{3}out(c_out, pkS_15);
{4}!
new skP_16;
{5}let pkP_17 = pk(skP_16) in
{6}out(c_out, pkP_17);
(
    {40}!
    new a_37;
    {41}let gA_38 = kgen(g(),a_37) in
    {42}out(c_out, gA_38);
    {43}in(c_in, B_39);
    {44}in(c_in, sig_40);
    {45}in(c_in, opks_41);
    {46}if pkS_15 = opks_41 then
    {47}let h_1_42 = hash3(gA_38,B_39,pkS_15) in
    {48}let k_1_43 = kgen(B_39,a_37) in
    {49}let x_44 = verify(sig_40,pkS_15) in
    {50}if x_44 = true() then
    {51}event AcceptP(pkS_15,pkP_17);
    {52}let kPS_1_45 = kdfPtoS(k_1_43,h_1_42) in
    {53}let kSP_1_46 = kdfStoP(k_1_43,h_1_42) in
    {54}out(c_out, enc(user_auth(),kPS_1_45));
    {55}in(c_in, userauth_answer_47);
    {56}if dec(userauth_answer_47,kSP_1_46) = user_auth() then
    {57}event AcceptP2(pkS_15,pkP_17);
    {58}let y_48 = conc(c_50(),c_128()) in
    {59}out(c_out, y_48);
    {60}out(c_out, enc(sign(user_answer(),skP_16),kPS_1_45));
    0
) | (
    {7}!
    {8}in(c_in, a_63_18);
    {9}in(c_in, a_429_19);
    {10}if c_0() = a_429_19 then
    {11}event bad();
    new SKey_661_20;
    {12}let sk_663_21 = kgen(g(),SKey_661_20) in
    {13}out(c_out, sk_663_21);
    {14}let kAB_665_22 = kgen(a_429_19,SKey_661_20) in
    {15}let HMAC_671_23 = hash3(a_429_19,sk_663_21,pkS_15) in
    {16}event AcceptS(pkS_15,pkP_17);
    {17}let signature_677_24 = sign(inputs(),skS_14) in
    {18}out(c_out, sign(inputs(),skS_14));
    {19}let kPS_681_25 = kdfPtoS(kAB_665_22,HMAC_671_23) in
    {20}let kSP_685_26 = kdfStoP(kAB_665_22,HMAC_671_23) in
    {21}in(c_in, a_689_27);
    {22}let Dec_690_28 = dec(a_689_27,kPS_681_25) in
    {23}let Enc_693_29 = enc(Dec_690_28,kSP_685_26) in
    {24}out(c_out, Enc_693_29);
    {25}in(c_in, a_5074_30);
    {26}in(c_in, a_5173_31);
    {27}if c_0() = a_5173_31 then
    {28}event bad();
    {29}let Pars1_5177_32 = pars1(a_5173_31) in
    {30}if c_50() = Pars1_5177_32 then
    {31}event bad();
    {32}let Pars2_5183_33 = pars2(a_5173_31) in
    {33}if c_256() = Pars2_5183_33 then
    {34}event bad();
    {35}in(c_in, a_6160_34);
    {36}let Dec_6161_35 = dec(a_6160_34,kPS_681_25) in
    {37}let Ver_6165_36 = verify(Dec_6161_35,pkP_17) in
    {38}if Ver_6165_36 = c_1() then
    {39}event AcceptS2(pkS_15,pkP_17);
    0
)

-- Query not ev:AcceptS2(i_67,j_68)
Completing...
Starting query not ev:AcceptS2(i_67,j_68)
RESULT not ev:AcceptS2(i_67,j_68) is true.
-- Query not ev:AcceptS(i_1617,j_1618)
Completing...
Starting query not ev:AcceptS(i_1617,j_1618)
goal reachable: end:AcceptS(pk(skS_14[!1 = @sid_3171]),pk(skP_16[!2 = @sid_3172,!1 = @sid_3171]))
Abbreviations:
skS_3181 = skS_14[!1 = @sid_3176]
skP_3182 = skP_16[!2 = @sid_3177,!1 = @sid_3176]

1. The attacker has some term a_63_3175.
attacker:a_63_3175.

2. Using the function c_0 the attacker may obtain c_0().
attacker:c_0().

3. The message a_63_3175 that the attacker may have by 1 may be received at input {8}.
The message c_0() that the attacker may have by 2 may be received at input {9}.
So event AcceptS(pk(skS_3181),pk(skP_3182)) may be executed at {16}.
end:AcceptS(pk(skS_3181),pk(skP_3182)).


A more detailed output of the traces is available with
  param traceDisplay = long.

out(c_out, pk(skS_14_5)) at {3} in copy a_1

out(c_out, pk(skP_16_6)) at {6} in copy a_1, a_2

in(c_in, a_3) at {8} in copy a_1, a_2, a_4

in(c_in, c_0()) at {9} in copy a_1, a_2, a_4

event(bad()) at {11} in copy a_1, a_2, a_4

out(c_out, kgen(g(),SKey_661_20_7)) at {13} in copy a_1, a_2, a_4

event(AcceptS(pk(skS_14_5),pk(skP_16_6))) at {16} in copy a_1, a_2, a_4

The event AcceptS(pk(skS_14_5),pk(skP_16_6)) is executed.
A trace has been found.
RESULT not ev:AcceptS(i_1617,j_1618) is false.
-- Query not ev:AcceptP2(i_3402,j_3403)
Completing...
Starting query not ev:AcceptP2(i_3402,j_3403)
goal reachable: end:AcceptP2(pk(skS_14[!1 = @sid_5043]),pk(skP_16[!2 = @sid_5044,!1 = @sid_5043]))
Abbreviations:
skS_5072 = skS_14[!1 = @sid_5068]
skP_5073 = skP_16[!2 = @sid_5067,!1 = @sid_5068]
a_5074 = a_37[!3 = @sid_5066,!2 = @sid_5067,!1 = @sid_5068]

1. Using the function g the attacker may obtain g().
attacker:g().

2. The attacker has some term a_63_5047.
attacker:a_63_5047.

3. Using the function c_0 the attacker may obtain c_0().
attacker:c_0().

4. The message a_63_5047 that the attacker may have by 2 may be received at input {8}.
The message c_0() that the attacker may have by 3 may be received at input {9}.
So the message sign(inputs(),skS_5072) may be sent to the attacker at output {18}.
attacker:sign(inputs(),skS_5072).

5. The message pk(skS_5072) may be sent to the attacker at output {3}.
attacker:pk(skS_5072).

6. The message kgen(g(),a_5074) may be sent to the attacker at output {42}.
attacker:kgen(g(),a_5074).

7. By 6, the attacker may know kgen(g(),a_5074).
By 1, the attacker may know g().
By 5, the attacker may know pk(skS_5072).
Using the function hash3 the attacker may obtain hash3(kgen(g(),a_5074),g(),pk(skS_5072)).
attacker:hash3(kgen(g(),a_5074),g(),pk(skS_5072)).

8. By 6, the attacker may know kgen(g(),a_5074).
By 7, the attacker may know hash3(kgen(g(),a_5074),g(),pk(skS_5072)).
Using the function kdfStoP the attacker may obtain kdfStoP(kgen(g(),a_5074),hash3(kgen(g(),a_5074),g(),pk(skS_5072))).
attacker:kdfStoP(kgen(g(),a_5074),hash3(kgen(g(),a_5074),g(),pk(skS_5072))).

9. Using the function user_auth the attacker may obtain user_auth().
attacker:user_auth().

10. By 9, the attacker may know user_auth().
By 8, the attacker may know kdfStoP(kgen(g(),a_5074),hash3(kgen(g(),a_5074),g(),pk(skS_5072))).
Using the function enc the attacker may obtain enc(user_auth(),kdfStoP(kgen(g(),a_5074),hash3(kgen(g(),a_5074),g(),pk(skS_5072)))).
attacker:enc(user_auth(),kdfStoP(kgen(g(),a_5074),hash3(kgen(g(),a_5074),g(),pk(skS_5072)))).

11. The message g() that the attacker may have by 1 may be received at input {43}.
The message sign(inputs(),skS_5072) that the attacker may have by 4 may be received at input {44}.
The message pk(skS_5072) that the attacker may have by 5 may be received at input {45}.
The message enc(user_auth(),kdfStoP(kgen(g(),a_5074),hash3(kgen(g(),a_5074),g(),pk(skS_5072)))) that the attacker may have by 10 may be received at input {55}.
So event AcceptP2(pk(skS_5072),pk(skP_5073)) may be executed at {57}.
end:AcceptP2(pk(skS_5072),pk(skP_5073)).


A more detailed output of the traces is available with
  param traceDisplay = long.

out(c_out, pk(skS_14_14)) at {3} in copy a_8

out(c_out, pk(skP_16_15)) at {6} in copy a_8, a_9

out(c_out, kgen(g(),a_37_16)) at {42} in copy a_8, a_9, a_10

out(c_out, pk(skP_16_17)) at {6} in copy a_8, a_13

in(c_in, a_11) at {8} in copy a_8, a_13, a_12

in(c_in, c_0()) at {9} in copy a_8, a_13, a_12

event(bad()) at {11} in copy a_8, a_13, a_12

out(c_out, kgen(g(),SKey_661_20_18)) at {13} in copy a_8, a_13, a_12

event(AcceptS(pk(skS_14_14),pk(skP_16_17))) at {16} in copy a_8, a_13, a_12

out(c_out, sign(inputs(),skS_14_14)) at {18} in copy a_8, a_13, a_12

in(c_in, g()) at {43} in copy a_8, a_9, a_10

in(c_in, sign(inputs(),skS_14_14)) at {44} in copy a_8, a_9, a_10

in(c_in, pk(skS_14_14)) at {45} in copy a_8, a_9, a_10

event(AcceptP(pk(skS_14_14),pk(skP_16_15))) at {51} in copy a_8, a_9, a_10

out(c_out, enc(user_auth(),kdfPtoS(kgen(g(),a_37_16),hash3(kgen(g(),a_37_16),g(),pk(skS_14_14))))) at {54} in copy a_8, a_9, a_10

in(c_in, enc(user_auth(),kdfStoP(kgen(g(),a_37_16),hash3(kgen(g(),a_37_16),g(),pk(skS_14_14))))) at {55} in copy a_8, a_9, a_10

event(AcceptP2(pk(skS_14_14),pk(skP_16_15))) at {57} in copy a_8, a_9, a_10

The event AcceptP2(pk(skS_14_14),pk(skP_16_15)) is executed.
A trace has been found.
RESULT not ev:AcceptP2(i_3402,j_3403) is false.
-- Query not ev:AcceptP(i_5463,j_5464)
Completing...
Starting query not ev:AcceptP(i_5463,j_5464)
goal reachable: end:AcceptP(pk(skS_14[!1 = @sid_7032]),pk(skP_16[!2 = @sid_7033,!1 = @sid_7032]))
Abbreviations:
skS_7048 = skS_14[!1 = @sid_7041]
skP_7049 = skP_16[!2 = @sid_7044,!1 = @sid_7041]

1. The attacker has some term B_7043.
attacker:B_7043.

2. The attacker has some term a_63_7036.
attacker:a_63_7036.

3. Using the function c_0 the attacker may obtain c_0().
attacker:c_0().

4. The message a_63_7036 that the attacker may have by 2 may be received at input {8}.
The message c_0() that the attacker may have by 3 may be received at input {9}.
So the message sign(inputs(),skS_7048) may be sent to the attacker at output {18}.
attacker:sign(inputs(),skS_7048).

5. The message pk(skS_7048) may be sent to the attacker at output {3}.
attacker:pk(skS_7048).

6. The message B_7043 that the attacker may have by 1 may be received at input {43}.
The message sign(inputs(),skS_7048) that the attacker may have by 4 may be received at input {44}.
The message pk(skS_7048) that the attacker may have by 5 may be received at input {45}.
So event AcceptP(pk(skS_7048),pk(skP_7049)) may be executed at {51}.
end:AcceptP(pk(skS_7048),pk(skP_7049)).


A more detailed output of the traces is available with
  param traceDisplay = long.

out(c_out, pk(skS_14_26)) at {3} in copy a_19

out(c_out, pk(skP_16_27)) at {6} in copy a_19, a_20

out(c_out, kgen(g(),a_37_28)) at {42} in copy a_19, a_20, a_25

out(c_out, pk(skP_16_29)) at {6} in copy a_19, a_23

in(c_in, a_21) at {8} in copy a_19, a_23, a_22

in(c_in, c_0()) at {9} in copy a_19, a_23, a_22

event(bad()) at {11} in copy a_19, a_23, a_22

out(c_out, kgen(g(),SKey_661_20_30)) at {13} in copy a_19, a_23, a_22

event(AcceptS(pk(skS_14_26),pk(skP_16_29))) at {16} in copy a_19, a_23, a_22

out(c_out, sign(inputs(),skS_14_26)) at {18} in copy a_19, a_23, a_22

in(c_in, a_24) at {43} in copy a_19, a_20, a_25

in(c_in, sign(inputs(),skS_14_26)) at {44} in copy a_19, a_20, a_25

in(c_in, pk(skS_14_26)) at {45} in copy a_19, a_20, a_25

event(AcceptP(pk(skS_14_26),pk(skP_16_27))) at {51} in copy a_19, a_20, a_25

The event AcceptP(pk(skS_14_26),pk(skP_16_27)) is executed.
A trace has been found.
RESULT not ev:AcceptP(i_5463,j_5464) is false.
-- Query ev:AcceptS2(i_7429,j_7430) ==> ev:AcceptP2(i_7429,j_7430)
Completing...
Starting query ev:AcceptS2(i_7429,j_7430) ==> ev:AcceptP2(i_7429,j_7430)
RESULT ev:AcceptS2(i_7429,j_7430) ==> ev:AcceptP2(i_7429,j_7430) is true.
-- Query ev:AcceptP(i_8986,j_8987) ==> ev:AcceptS(i_8986,l_8988)
Completing...
Starting query ev:AcceptP(i_8986,j_8987) ==> ev:AcceptS(i_8986,l_8988)
goal reachable: begin:AcceptS(pk(skS_14[!1 = @sid_10649]),pk(skP_16[!2 = @sid_10650,!1 = @sid_10649])) -> end:AcceptP(pk(skS_14[!1 = @sid_10649]),pk(skP_16[!2 = @sid_10651,!1 = @sid_10649]))
RESULT ev:AcceptP(i_8986,j_8987) ==> ev:AcceptS(i_8986,l_8988) is true.

RESULT not ev:AcceptS2(i_67,j_68) is true.
RESULT not ev:AcceptS(i_1617,j_1618) is false.
RESULT not ev:AcceptP2(i_3402,j_3403) is false.
RESULT not ev:AcceptP(i_5463,j_5464) is false.
RESULT ev:AcceptS2(i_7429,j_7430) ==> ev:AcceptP2(i_7429,j_7430) is true.
RESULT ev:AcceptP(i_8986,j_8987) ==> ev:AcceptS(i_8986,l_8988) is true.

